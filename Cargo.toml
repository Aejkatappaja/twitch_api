[package]
name = "twitch_api"
version = "0.6.1"
authors = ["Emil Gardstr√∂m <emil.gardstrom@gmail.com>"]
edition = "2018"
repository = "https://github.com/twitch-rs/twitch_api"
license = "MIT OR Apache-2.0"
description = "Library for talking with the new Twitch API aka. \"Helix\", TMI and more!"
keywords = ["oauth", "twitch", "async", "asynchronous", "api"]
documentation = "https://docs.rs/twitch_api/0.6.1"
readme = "README.md"
resolver = "2"
include = [
    "src/*",
    "./Cargo.toml",
    "examples/**",
    "./README.md",
    "CONTRIBUTING.md",
    "CHANGELOG.md",
    "LICENSE*",
]
rust-version = "1.64"


[workspace]
members = ["xtask", "examples/*"]
exclude = ["twitch_types", "twitch_oauth2"]

[workspace.dependencies]
twitch_api = { version = "0.6.1", path = "." }
twitch_oauth2 = { version = "0.9.0", path = "twitch_oauth2/" }

[dependencies]
thiserror = "1.0.37"
displaydoc = "0.2.3"
http = "0.2.8"
typed-builder = { version = "0.10.0", optional = true }
url = "2.3.1"
once_cell = "1.15.0"
twitch_oauth2 = { version = "0.9.0", optional = true, path = "twitch_oauth2/" }
serde = { version = "1.0.147", features = ["derive"] }
serde_path_to_error = { version = "0.1.8", optional = true }
async-trait = { version = "0.1.58", optional = true }
serde_json = { version = "1.0.87", optional = true }
serde_ignored = { version = "0.1.5", optional = true }
tracing = { version = "0.1.37", optional = true }
ureq = { version = "2.5.0", optional = true, default-features = false, features = [
    "tls",
] }
reqwest = { version = "0.11.12", optional = true, default-features = false }
surf = { version = "2.3.2", optional = true, default-features = false }
http-types = { version = "2.12.0", optional = true, features = [
    "hyperium_http",
] }
sha2 = { version = "0.10.6", optional = true }
crypto_hmac = { package = "hmac", version = "0.12.1", optional = true }
aliri_braid = "0.2.4"
futures = { version = "0.3.25", optional = true }
hyper = { version = "0.14.20", optional = true }
twitch_types = { version = "0.3.5", path = "./twitch_types" }

[features]
default = []

client = ["twitch_oauth2/client", "dep:futures", "dep:hyper"]

unsupported = ["serde_json?/raw_value"]
deny_unknown_fields = []
trace_unknown_fields = ["dep:serde_ignored", "tracing"]

serde_json = ["dep:serde_json", "dep:serde_path_to_error"]
helix = [
    "twitch_types/color",
    "twitch_types/emote",
    "twitch_types/goal",
    "twitch_types/moderation",
    "twitch_types/points",
    "twitch_types/stream",
    "twitch_types/timestamp",
    "twitch_types/user",
    "dep:async-trait",
    "serde_json",
    "dep:hyper",
]

tmi = ["serde_json", "dep:serde_path_to_error", "dep:hyper"]

surf = [
    "dep:surf",
    "dep:http-types",
    "client",
    "twitch_oauth2/surf",
    "hyper?/stream",
]

ureq = ["dep:ureq", "client"]

reqwest = ["dep:reqwest", "client", "twitch_oauth2/reqwest"]

pubsub = [
    "serde_json",
    "twitch_types/emote",
    "twitch_types/moderation",
    "twitch_types/stream",
    "twitch_types/timestamp",
    "twitch_types/user",
    "twitch_types/points",
]

eventsub = [
    "serde_json",
    "twitch_types/emote",
    "twitch_types/eventsub",
    "twitch_types/goal",
    "twitch_types/points",
    "twitch_types/stream",
    "twitch_types/timestamp",
]

hmac = ["dep:crypto_hmac", "dep:sha2"]

mock_api = []

all = [
    "tmi",
    "helix",
    "client",
    "pubsub",
    "eventsub",
    "hmac",
    "twitch_oauth2",
    "tracing",
    "twitch_types/time",
]

_all = [
    "all",
    "typed-builder",
    "surf",
    "reqwest",
    "ureq",
    "twitch_oauth2/surf_client_curl",
    "mock_api",
]

[dev-dependencies]
tokio = { version = "1.21.2", features = [
    "rt-multi-thread",
    "macros",
    "rt-multi-thread",
] }
futures = "0.3.25"
serde_cbor = "0.11.2"
serde_json = "1.0.87"

[build-dependencies]
version_check = "0.9.4"

[package.metadata.docs.rs]
features = ["all", "unsupported", "_all"]
rustc-args = ["--cfg", "nightly"]
rustdoc-args = ["--cfg", "nightly"]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples=all"]

[profile.dev.package.backtrace]
opt-level = 3

#workaround for using different twitch_types
[patch.crates-io.twitch_types]
path = "./twitch_types"
